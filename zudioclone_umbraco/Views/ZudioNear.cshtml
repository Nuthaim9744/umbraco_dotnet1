@using zudioclone.models.Models.PageModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ZudioNear>

@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.Models.Blocks;

@{
    Layout = "Master.cshtml";

    // Get search query and page number from the query string
    var searchQuery = Context.Request.Query["name"].ToString() ?? "";
    var page = int.TryParse(Context.Request.Query["page"], out var p) ? p : 1;
    var pageSize = 6; // Number of items per page

    // Fetch and filter address cards
    var addressCards = Model.AddressCards
        .Select(block => block.Content as AddressCards)
        .Where(content => content != null);

    // Filter address cards based on the search query
    if (!string.IsNullOrEmpty(searchQuery))
    {
        addressCards = addressCards.Where(card => card.Title.InvariantContains(searchQuery));
    }

    // Calculate total items and apply pagination
    var totalItems = addressCards.Count();
    var pagedItems = addressCards.Skip((page - 1) * pageSize).Take(pageSize);
}

<h4 class="mt-3">STORE LOCATOR</h4>

<div class="container">
    <div class="col2 text-center m-5">
        <h4>FIND THE ZUDIO STORE CLOSEST TO YOU</h4>
    </div>
    <div class="col2 text-center m-5">
        <form method="get" action="">
            <input type="text" id="searchInput" name="name" value="@searchQuery" placeholder="find nearest zudio" />
            <button type="submit"><i class="fas fa-search search-icon"></i></button>
        </form>
    </div>
</div>

<h4 class="text-center mt-4">ALL STORES</h4>

<div class="row" id="addressCardsContainer">
    @if (!pagedItems.Any())
    {
        <p>No address cards found.</p>
    }
    else
    {
        @foreach (var content in pagedItems)
        {
            var locationUrl = content.Location?.Url; // Get the URL from the URL picker

            <div class="col-md-4 address-card" data-title="@content.Title">
                <div class="card m-1" style="width: 100%; background-color: whitesmoke;">
                    <div class="card-body">
                        <h5 class="card-title">@content.Title</h5>
                        <h6>ADDRESS</h6>
                        <p class="card-text">@content.Description</p>

                        @if (!string.IsNullOrEmpty(locationUrl))
                        {
                            <iframe src="@locationUrl" width="100%" height="100" style="border:0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>
                        }
                        else
                        {
                            <p>Location not available.</p>
                        }
                    </div>
                </div>
            </div>
        }
    }
</div>

<nav aria-label="Page navigation example">
    <ul class="pagination mt-5">
        @if (page > 1)
        {
            <li class="page-item">
                <a class="page-link" href="?name=@searchQuery&page=@(page - 1)" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        }

        @for (var i = 1; i <= Math.Ceiling((double)totalItems / pageSize); i++)
        {
            <li class="page-item @(i == page ? "active" : "")">
                <a class="page-link" href="?name=@searchQuery&page=@i">@i</a>
            </li>
        }

        @if (page < Math.Ceiling((double)totalItems / pageSize))
        {
            <li class="page-item">
                <a class="page-link" href="?name=@searchQuery&page=@(page + 1)" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        }
    </ul>
</nav>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const searchInput = document.getElementById('searchInput');
        const addressCardsContainer = document.getElementById('addressCardsContainer');
        const addressCards = addressCardsContainer.querySelectorAll('.address-card');

        searchInput.addEventListener('input', function () {
            const query = searchInput.value.toLowerCase();

            addressCards.forEach(card => {
                const title = card.getAttribute('data-title').toLowerCase();
                if (title.includes(query)) {
                    card.style.display = '';
                } else {
                    card.style.display = 'none';
                }
            });

            if (query === '') {
                addressCards.forEach(card => card.style.display = '');
            }
        });
    });
</script>
